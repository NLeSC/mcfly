name: CI Build

on:
  workflow_dispatch:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  schedule:
    - cron: '0 0 1 * *'

jobs:

  first_check:
    name: first code check / python-3.10 / ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Python info
        run: |
          which python3
          python3 --version
      - name: Build package and create dev environment
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install -e ".[dev]"
      - name: Check style against standards using prospector
        shell: bash -l {0}
        run: prospector --profile linter_profile -o grouped -o pylint:pylint-report.txt --zero-exit
      - name: Run all unit test with Tensorflow backend
        run: |
          python3 -m pip install -e ".[tensorflow]"
          coverage run --source=mcfly --data-file=.coverage.tensorflow -m pytest
      - name: Run JAX backend tests
        run: |
          python3 -m pip install -e ".[jax]"
          keras_backend=jax coverage run --source=mcfly --data-file=.coverage.jax -m pytest -m jax
      - name: Run PyTorch backend tests
        run: |
          python3 -m pip install --extra-index-url https://download.pytorch.org/whl/cpu -e ".[torch]"
          keras_backend=torch coverage run --source=mcfly --data-file=.coverage.torch -m pytest -m torch
      - name: Combine coverage reports
        run: coverage combine --keep .coverage.tensorflow .coverage.jax .coverage.torch
      - name: Upload test coverage with Scrutinizer
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: |
          python3 -m pip install scrutinizer-ocular
          ocular --access-token ${{ secrets.SCRUTINIZER_OCULAR_TOKEN }}

  basic_checks:
    name: Run tests across OS and versions / python-${{ matrix.python-version }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: first_check
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.10', '3.11']
        exclude:
          # already tested in first_check job
          - python-version: 3.10
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Python info
        run: |
          which python3
          python3 --version
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install -e ".[dev,tensorflow]"
      - name: Run unit tests
        run: coverage run --source=mcfly --data-file=.coverage.tensorflow -m pytest -v
